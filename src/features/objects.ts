import { ExecutionData} from "../models/tiled-gameboy-tool-types";
import fs from 'fs'
import {sep} from 'path'
import { getObjectFieldDeclaration, getTotalObjectArrayObject } from "../utils/code-gen.utils";

export const getObjectStructName =(executionData:ExecutionData)=>{
    return executionData.objectStructName ? executionData.objectStructName :`${executionData.identifier}_Object`
}

export const getStructDataString =(executionData:ExecutionData)=>{

    
    // If the user passes --object-struct-name, use it's value
    if(executionData.objectStructName){

        return `struct ${executionData.objectStructName};`

    // If the user doesn't pass --object-struct-name, declare our own structure
    }else{

        return  `
typedef struct ${executionData.identifier}_Object {

    uint16_t y;
    uint16_t x;
    uint8_t id;
    ${executionData.objectFields.map(getObjectFieldDeclaration).join("\n")}

} ${executionData.identifier}_Object; `

    }
    
}

export default (data:any,executionData:ExecutionData)=>{

    var objectStructName= getObjectStructName(executionData);

    const writeHContent = `
//AUTOGENERATED FILE FROM tiled-gameboy-tool

#include <stdint.h>
#include <gbdk/platform.h>

#define ${executionData.identifier}_OBJECT_COUNT ${executionData.totalObjects.length}

${getStructDataString(executionData)}

const ${objectStructName} ${executionData.identifier}Objects[ ${executionData.totalObjects.length}];

${executionData.objectStrings.map(x=>"const unsigned char *"+x.name+";").join("\n")}
    
    `
    
    const writeCContent = `
//AUTOGENERATED FILE FROM tiled-gameboy-tool

#include <stdint.h>
#include <gbdk/platform.h>
#include "${executionData.identifier}_objects.h"

${executionData.objectStrings.map(x=>"const unsigned char *"+x.name+"=\""+x.value+"\"").join(";\n")}

const ${objectStructName} ${executionData.identifier}Objects[ ${executionData.totalObjects.length}]={

    ${executionData.totalObjects.map(getTotalObjectArrayObject).join(",\n")}
};
    
    `

    fs.writeFileSync(`${executionData.outputDirectory+sep+executionData.identifier}_objects.c`,writeCContent )
    fs.writeFileSync(`${executionData.outputDirectory+sep+executionData.identifier}_objects.h`,writeHContent )
}